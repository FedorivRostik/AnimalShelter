// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(AnimalShelterContext))]
    [Migration("20221018143705_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(62)
                        .HasColumnType("nvarchar(62)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(46)
                        .HasColumnType("nvarchar(46)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasMaxLength(46)
                        .HasColumnType("nvarchar(46)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@gmail.com",
                            FirstName = "Adam",
                            PasswordHash = new byte[] { 134, 105, 144, 12, 249, 168, 255, 33, 212, 120, 3, 24, 113, 253, 168, 156, 236, 69, 52, 31, 50, 125, 203, 49, 139, 234, 181, 73, 252, 33, 114, 187, 68, 104, 220, 146, 127, 145, 187, 251, 206, 243, 168, 124, 190, 159, 249, 127, 12, 24, 94, 235, 65, 201, 163, 157, 87, 161, 157, 253, 46, 99, 70, 235 },
                            PasswordSalt = new byte[] { 2, 163, 147, 16, 170, 144, 93, 182, 73, 240, 224, 110, 219, 124, 226, 247, 32, 141, 150, 170, 136, 161, 83, 87, 153, 158, 142, 98, 66, 129, 210, 181, 220, 156, 159, 251, 213, 147, 100, 103, 219, 7, 188, 81, 86, 62, 33, 249, 225, 138, 185, 84, 152, 87, 155, 6, 4, 209, 242, 121, 44, 140, 196, 162, 253, 112, 230, 222, 16, 247, 160, 130, 124, 122, 248, 203, 252, 36, 104, 11, 241, 74, 108, 156, 167, 205, 76, 238, 73, 191, 160, 166, 234, 30, 175, 18, 127, 48, 126, 246, 142, 25, 205, 139, 94, 189, 176, 248, 12, 19, 203, 235, 73, 5, 115, 125, 24, 180, 91, 144, 48, 188, 22, 88, 29, 213, 183, 243 },
                            RoleId = 1,
                            SecondName = "Adamson"
                        });
                });

            modelBuilder.Entity("Core.Entities.User", b =>
                {
                    b.HasOne("Core.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Core.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
